---
.this_is_a_job:
    id_name: "optional name"
    build:
        # define a Makefile-based compilation
        make_target: all
        # dependency scheme
        depends_on: ["this_is_another_test"]
        # program binary (if needed)
        binary: "binary_name"
        # source files to include (if needed)
        source_files: "path/to/files"
        # extra cflags
        cflags: "extra cflags"
        # extra ldflags
        ldflags: "extra ldflags"
        # directory where program should be built
        cwd: "dir/to/build"
        # variants describing the job
        variants:
            - openmp
            - tbb
            - accel

    run: &run_part
        iterate:
            # runtime iterators
            n_mpi: [2, 4]
            n_omp: ["1:4"]
            program:
                # user-defined program arguments
                args: ["-iter 1000", "-fast"]
        # directory where program should be built
        cwd: "dir/to/build"
        # dependency scheme
        depends_on: ["this_is_another_run_test_in_the_same_file"]
        # external modules (suppose a support for modules)
        modules:
            - protobuf
            - gnu/gcc/7.3.0
        # extra env vars to export before running the job
        environment:
            MY_VAR: 1000.0
            MY_OTHER_VAR: 2

    # this is a copy/paste from pav2
    validate:
        expect_exit: 0
        time:
            mean_time: 10.0
            tolerance: 2.0
            kill_after: 20
        parse:
            regex: '^\d+(\.\d+) received$'
            script:
                path: "/path/to/script"

#########################################################

# depicts an inheritance mechanism.
real_test:
    build:
        make_target: all
    run:
        <<: *run_part

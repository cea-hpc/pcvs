---
.this_is_a_job:
    label: "optional name"
    group: "GRPSERIAL"
    build:
        make:
                target: all
        sources:
                # source files to include (if needed)
                files: "@SRCPATH@/*.c"
                # program binary (if needed)
                binary: "a.out"
        # dependency scheme
        depends_on: ["this_is_another_test"]
        # extra cflags
        cflags: "extra cflags"
        # extra ldflags
        ldflags: "extra ldflags"
        # directory where program should be built
        cwd: "dir/to/build"
        # variants describing the job
        variants:
            - openmp
            - accel

    run: &run_part
        program: "./a.out"
        iterate:
            # runtime iterators
            n_mpi: [2, 4]
            n_omp: ["1:4"]
            program:
                #name will be used as part of final test-name
                give_it_a_name:
                    numeric: true
                    type: "argument|environment"
                    values: ["-iter 1000", "-fast"]
                    subtitle: "lol"
        # directory where program should be built
        cwd: "dir/to/build"
        # dependency scheme
        depends_on: ["this_is_another_run_test_in_the_same_file"]
        # external modules (suppose a support for modules)
        package_manager:
                spack:
                - protobuf@3.1.1
                - gcc@7.3.0
                - osu ^${COMPILER_SPACKED} %intel
                modules:
                - protobuf
                - gnu/gcc/7.3.0
        # extra env vars to export before running the job
        environment:
            MY_VAR: 1000.0
            MY_OTHER_VAR: 2

    artifacts:
        #relative to $BUILDPATH
        paths:
            - "./path/1"
            - "./path/2"

    # this is a copy/paste from pav2
    validate:
        expect_exit: 0
        time:
            mean_time: 10.0
            tolerance: 2.0
            kill_after: 20
        match:
            controller: "./script.py"
            label:
                expr: '^\d+(\.\d+) received$'
                expect: true|false

            label2: 'Total Elapsed: \d+\.\d+ sec.$'
        script:
            path: "/path/to/script"

#########################################################

# depicts an inheritance mechanism.
real_test:
    build:
        make_target: all
    run:
        <<: *run_part

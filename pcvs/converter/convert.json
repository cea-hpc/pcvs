{
	"__tokens": {
		"<name>": "(?P<name>[a-zA-Z0-9-_+.]+)",
		"<ropt>": "(?P<ropt>[a-zA-Z0-9-_]+)",
		"<child_nodes>": "(?P<child_nodes>.*)",
		"<it>": "(?P<it>.*)",
		"<te_it>": "(?P<te_it>(?!(type|build|run|validate|metric|files|bin|cargs|chdir|target|deps|args|time|tolerance|timeout|returns|herit|tbb|accl|openmp))[a-zA-Z0-9-_]+)",
		"<compiler>": "(?P<compiler>[a-z0-9]+)"
		
	},

	"__modifiers": {
		"te.<name>.herit.<child_nodes>": "te.<name>.<child_nodes>",
		"runtime.iterators.<child_nodes>": "runtime.criterions.<child_nodes>",
		"criterion.iterators.<child_nodes>": "criterion.<child_nodes>",
		"compiler.commands.<compiler>": "compiler.<compiler>.program",
		"compiler.variants.<name>.args": "compiler.cc.variants.<name>.args"
	},

	"environment.compiler-target": null,
	"environment.runtime-target": null,
	"environment.group-target": null,
	"environment.iterators.<name>": "criterion.<name>.values",
	"environment.naming.<name>": "criterion.<name>.subtitle",
	"environment.cluster.max_nodes" : "machine.partitions.default.nodes",
	"environment.cluster.max_cores_per_node": "machine.partitions.default.cores_per_node",
	"environment.cluster.launcher": "machine.partitions.default.job_manager.allocate.program",
	"environment.validation.run_wrapper": "machine.partitions.default.job_manager.allocate.wrapper",
	"environment.validation.compil_wrapper": "machine.partitions.default.job_manager.remote.wrapper",
	"environment.validation.worker_mintime": "machine.partitions.default.job_manager.mintime",
	"environment.validation.worker_maxtime": "machine.partitions.default.job_manager.maxtime",
	"environment.validation.workers": "machine.partitions.default.concurrent_run",
	"environment.cluster.args": null,
	"environment.validation.timeout": null,
	"environment.validation.expect-success": "validation.fail_on_error",
	"environment.validation.tee": "validation.tee",
	"environment.validation.sched_policy": "validation.scheduling.model",
	"environment.validation.resource_level": "validation.scheduling.sched_on",
	"environment.validation.logging": "validation.result.logs",
	"environment.validation.formats": "validation.result.format", 
	"environment.validation.verbose": "validation.verbose",
	"environment.validation.job_meantime": "validation.result.job_timeout",

	"compiler.c" : "compiler.commands.cc",
	"compiler.cxx" : "compiler.commands.cxx",
	"compiler.cu" : "compiler.commands.cu",
	"compiler.f77" : "compiler.commands.f77",
	"compiler.f90" : "compiler.commands.f90",
	"compiler.f95" : "compiler.commands.f95",
	"compiler.f03" : "compiler.commands.f03",
	"compiler.f08" : "compiler.commands.f08",
	"compiler.cflags" : "compiler.cc.args",
	"compiler.openmp" : "compiler.cc.variants.openmp.args",
	"compiler.tbb": "compiler.cc.variants.tbb.args",
	"compiler.accl": "compiler.cc.variants.accl.args",
	"compiler.strict": "compiler.cc.variants.scrict.args",
	
	"runtime.cmd": "runtime.program",
	"runtime.args": "runtime.args",
	"runtime.module": "runtime.plugin",
	"runtime.timeout-prefix": null,
	"runtime.<it>.key": ["call:k = 'runtime||criterions||<it>||numeric=True' if '<it>'.startswith('n_') else 'runtime||criterions||<it>||numeric=False'", "runtime||criterions||<it>||option"],
	"runtime.<it>.usage": "runtime.criterions.<it>.type",
	"runtime.<it>.<ropt>_val": "runtime.criterions.<it>.aliases.<ropt>",

	"te.<name>.type": ["te.<name>._compat.type"],
	"te.<name>.files": ["te.<name>.build.files"],
	"te.<name>.bin": ["te.<name>._compat.bin"],
	"te.<name>.cargs": "te.<name>.build.cflags",
	"te.<name>.cwd": ["te.<name>._compat.chdir"],
	"te.<name>.chdir": ["te.<name>._compat.chdir"],
	"te.<name>.target": "te.<name>.build.make.target",
	"te.<name>.deps": "te.<name>.run.depends_on",
	"te.<name>.args": "te.<name>.run.iterate.program.args.values",
	"te.<name>.time": "te.<name>.run.validate.time.mean_time",
	"te.<name>.tolerance": "te.<name>.run.validate.time.tolerance",
	"te.<name>.timeout": "te.<name>.run.validate.time.kill_after",
	"te.<name>.returns": "te.<name>.run.validate.expect_exit",
	"te.<name>.herit": null,
	"te.<name>.tbb": "te.<name>.build.variants+tbb",
	"te.<name>.accl": "te.<name>.build.variants+accl",
	"te.<name>.openmp": "te.<name>.build.variants+openmp",

	"te.<name>.build.cflags": "te.<name>.build.sources.cflags",
	"te.<name>.build.ldflags": "te.<name>.build.sources.ldflags"
}
